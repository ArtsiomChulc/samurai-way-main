{"version":3,"file":"static/js/258.336a728e.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/component/common/paginator/paginator.module.scss?0b8d","component/common/paginator/Paginator.tsx","webpack://samurai-way/./src/component/Users/users.module.scss?ce02","component/Users/User.tsx","component/Users/Users.tsx","component/Users/UsersContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapNumberPage\":\"paginator_wrapNumberPage__tRe96\",\"wrapPageNumber\":\"paginator_wrapPageNumber__AerpA\",\"numberPage\":\"paginator_numberPage__mreDu\",\"numberPageBold\":\"paginator_numberPageBold__tmSSz\",\"btnPaginator\":\"paginator_btnPaginator__s6AVx\"};","import s from \"./paginator.module.scss\";\r\nimport React, { useState } from \"react\";\r\n\r\ntype PropsType = {\r\n    portionSize: number;\r\n    totalUsersCount: number;\r\n    pageSize: number;\r\n    currentPage: number;\r\n    onPageCount: (page: number) => void;\r\n};\r\n\r\nexport const Paginator = (props: PropsType) => {\r\n    const { totalUsersCount, pageSize, currentPage, onPageCount, portionSize } = props;\r\n\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionNumber = portionNumber * portionSize;\r\n\r\n    return (\r\n        <>\r\n            <div className={s.wrapNumberPage}>\r\n                {portionNumber > 1 && (\r\n                    <button\r\n                        className={s.btnPaginator}\r\n                        onClick={() => {\r\n                            setPortionNumber(portionNumber - 1);\r\n                        }}\r\n                    >\r\n                        Prev\r\n                    </button>\r\n                )}\r\n                <div className={s.wrapPageNumber}>\r\n                    {pages\r\n                        .filter((p) => p >= leftPortionPageNumber && p <= rightPortionNumber)\r\n                        .map((page) => {\r\n                            return (\r\n                                <span\r\n                                    onClick={() => {\r\n                                        onPageCount(page);\r\n                                    }}\r\n                                    className={currentPage === page ? s.numberPageBold : s.numberPage}\r\n                                >\r\n                                    {page}\r\n                                </span>\r\n                            );\r\n                        })}\r\n                </div>\r\n                {portionCount > portionNumber && (\r\n                    <button\r\n                        className={s.btnPaginator}\r\n                        onClick={() => {\r\n                            setPortionNumber(portionNumber + 1);\r\n                        }}\r\n                    >\r\n                        Next\r\n                    </button>\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"usersBlock\":\"users_usersBlock__kG-bq\",\"flexUsersWrap\":\"users_flexUsersWrap__UzaNV\",\"userCard\":\"users_userCard__9W8LW\",\"userWrap\":\"users_userWrap__IwZ2a\",\"cardContent\":\"users_cardContent__kiBRK\",\"userName\":\"users_userName__Q8nMo\",\"wrapBtn\":\"users_wrapBtn__RbXx1\"};","import s from \"component/Users/users.module.scss\";\nimport btn from \"../common/styles/btn.module.css\";\nimport userPhoto from \"../../assets/images/userPhoto/user-icon.jpg\";\nimport React from \"react\";\nimport { UsersType } from \"Redux/users-reducer\";\nimport { NavLink } from \"react-router-dom\";\nimport DotPreloader from \"../common/dotPreloader/DotPreloader\";\nimport { Button, Card, CardActions, CardContent, CardMedia, Typography } from \"@mui/material\";\n\ntype UserPropsType = {\n    user: UsersType;\n    followingProgress: Array<number>;\n    follow: (id: number) => void;\n    unFollow: (id: number) => void;\n};\n\nexport const User = (props: UserPropsType) => {\n    const { user, followingProgress, follow, unFollow } = props;\n\n    return (\n        // <div key={user.id} className={s.userWrap}>\n        <div className={s.userCard}>\n            {/*<div className={s.userPhoto}>*/}\n            {/*    <NavLink to={\"/Profile/\" + user.id}>*/}\n            {/*        <img src={user.photos.small != null ? user.photos.small : userPhoto} alt=\"User photo\" />*/}\n            {/*    </NavLink>*/}\n            {/*</div>*/}\n            {/*<div className={s.titleInfo}>*/}\n            {/*    <div className={s.info}>*/}\n            {/*        <p>{user.name}</p>*/}\n            {/*        <p>{user.status}</p>*/}\n            {/*    </div>*/}\n            {/*    <div className={s.location}>*/}\n            {/*        <p>{\"user.location.country\"}</p>*/}\n            {/*        <p>{\"user.location.city\"}</p>*/}\n            {/*    </div>*/}\n            {/*</div>*/}\n            {/*<div className={s.btns}>*/}\n            {/*    {user.followed ? (*/}\n            {/*        <button*/}\n            {/*            disabled={followingProgress.some((id) => id === user.id)}*/}\n            {/*            className={`${btn.btn} ${s.btn}`}*/}\n            {/*            onClick={() => {*/}\n            {/*                unFollow(user.id);*/}\n            {/*            }}*/}\n            {/*        >*/}\n            {/*            {followingProgress.some((id) => id === user.id) ? <DotPreloader /> : \"Unfollow\"}*/}\n            {/*        </button>*/}\n            {/*    ) : (*/}\n            {/*        <button*/}\n            {/*            disabled={followingProgress.some((id) => id === user.id)}*/}\n            {/*            className={`${btn.btn} ${s.btn}`}*/}\n            {/*            onClick={() => {*/}\n            {/*                follow(user.id);*/}\n            {/*            }}*/}\n            {/*        >*/}\n            {/*            {followingProgress.some((id) => id === user.id) ? <DotPreloader /> : \"Follow\"}*/}\n            {/*        </button>*/}\n            {/*    )}*/}\n            {/*</div>*/}\n            <Card className={s.userWrap}>\n                <CardMedia\n                    sx={{ height: 180 }}\n                    image={user.photos.small != null ? user.photos.small : userPhoto}\n                    title={user.name}\n                />\n                <CardContent className={s.cardContent}>\n                    <Typography gutterBottom variant=\"h5\" component=\"div\" className={s.userName}>\n                        {user.name}\n                    </Typography>\n                    <Typography variant=\"body1\" color=\"text.secondary\">\n                        <span className={s.textStatus}>Status: </span>\n                        {user.status ? user.status : \"the user has not yet been determined\"}\n                    </Typography>\n                </CardContent>\n                <CardActions className={s.wrapBtn}>\n                    {user.followed ? (\n                        <Button\n                            size=\"small\"\n                            disabled={followingProgress.some((id) => id === user.id)}\n                            onClick={() => {\n                                unFollow(user.id);\n                            }}\n                        >\n                            Unfollow\n                        </Button>\n                    ) : (\n                        <Button\n                            size=\"small\"\n                            disabled={followingProgress.some((id) => id === user.id)}\n                            onClick={() => {\n                                follow(user.id);\n                            }}\n                        >\n                            Follow\n                        </Button>\n                    )}\n\n                    {/*<Button size=\"small\">Share</Button>*/}\n                    {/*<Button size=\"small\">Learn More</Button>*/}\n                </CardActions>\n            </Card>\n        </div>\n    );\n};\n","import React from \"react\";\nimport { UsersPageType } from \"Redux/users-reducer\";\nimport { Paginator } from \"component/common/paginator/Paginator\";\nimport { User } from \"component/Users/User\";\nimport s from \"component/Users/users.module.scss\";\n\ntype UsersPropsType = {\n    totalUsersCount: number;\n    pageSize: number;\n    currentPage: number;\n    users: UsersPageType;\n    onPageCount: (page: number) => void;\n    toggleFollowingCB: (isFollowing: boolean, id: number) => void;\n    followingProgress: Array<number>;\n    follow: (id: number) => void;\n    unFollow: (id: number) => void;\n    portionSize: number;\n};\n\nexport const Users = (props: UsersPropsType) => {\n    const {\n        totalUsersCount,\n        pageSize,\n        currentPage,\n        users,\n        onPageCount,\n        toggleFollowingCB,\n        followingProgress,\n        follow,\n        unFollow,\n        portionSize,\n    } = props;\n\n    return (\n        <div className={s.usersBlock}>\n            <Paginator\n                portionSize={portionSize}\n                totalUsersCount={totalUsersCount}\n                pageSize={pageSize}\n                currentPage={currentPage}\n                onPageCount={onPageCount}\n            />\n            <div className={s.flexUsersWrap}>\n                {users.users.map((user) => (\n                    <User\n                        user={user}\n                        followingProgress={followingProgress}\n                        follow={follow}\n                        unFollow={unFollow}\n                        key={user.id}\n                    />\n                ))}\n            </div>\n        </div>\n    );\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { AppRootStateType } from \"Redux/redux-store\";\nimport {\n    followThunkCreator,\n    getUsersThunkCreator,\n    SetCurrentPageAC,\n    SetUsersAC,\n    SetUsersTotalCountAC,\n    ToggleFetchingAC,\n    ToggleFollowingProgressAC,\n    unFollowThunkCreator,\n    UsersPageType,\n    UsersType,\n} from \"Redux/users-reducer\";\nimport { Users } from \"./Users\";\nimport Preloader from \"../common/preloader/Preloader\";\nimport { compose } from \"redux\";\nimport {\n    getCurrentPage,\n    getFollowingProgress,\n    getIsFetching,\n    getPageSize,\n    getTotalUserCount,\n    getUsersReselect,\n    getPortionSize,\n} from \"Redux/selectors/selectors\";\n\nclass UsersContainer extends React.Component<UsersPropsType> {\n    componentDidMount() {\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\n        // this.props.toggleFetchingCB(true)\n        // getUsers(this.props.currentPage, this.props.pageSize).then(data => {\n        //     this.props.toggleFetchingCB(false)\n        //     this.props.setUsersCB(data.items)\n        //     this.props.setTotalUserCount(data.totalCount)\n        // })\n    }\n\n    onPageCount = (page: number) => {\n        this.props.getUsers(page, this.props.pageSize);\n        // this.props.setCurrentPageCB(page)\n        // this.props.toggleFetchingCB(true)\n        // getUsers(page, this.props.pageSize).then(data => {\n        //     this.props.toggleFetchingCB(false)\n        //     this.props.setUsersCB(data.items)\n        // })\n    };\n\n    render() {\n        //REDIRECT\n        // if (!this.props.isAuth) return <Redirect to={'login'}/>\n\n        return this.props.isFetching ? (\n            <Preloader />\n        ) : (\n            <Users\n                totalUsersCount={this.props.totalUsersCount}\n                pageSize={this.props.pageSize}\n                currentPage={this.props.currentPage}\n                users={this.props.users}\n                onPageCount={this.onPageCount}\n                toggleFollowingCB={this.props.toggleFollowingCB}\n                followingProgress={this.props.followingProgress}\n                follow={this.props.follow}\n                unFollow={this.props.unFollow}\n                portionSize={this.props.portionSize}\n            />\n        );\n    }\n}\n\ntype MapStatePropsTypes = {\n    users: UsersPageType;\n    pageSize: number;\n    totalUsersCount: number;\n    currentPage: number;\n    isFetching: boolean;\n    followingProgress: Array<number>;\n    portionSize: number;\n    // isAuth: boolean\n};\n\nexport type MapDispatchPropsType = {\n    setUsersCB: (users: Array<UsersType>) => void;\n    setCurrentPageCB: (currentPage: number) => void;\n    setTotalUserCount: (totalUserCount: number) => void;\n    toggleFetchingCB: (isFetching: boolean) => void;\n    toggleFollowingCB: (isFollowing: boolean, id: number) => void;\n    getUsers: (currentPage: number, pageSize: number) => void;\n    follow: (id: number) => void;\n    unFollow: (id: number) => void;\n};\n\nexport type UsersPropsType = MapStatePropsTypes & MapDispatchPropsType;\n\nlet mapStateToProps = (state: AppRootStateType): MapStatePropsTypes => {\n    return {\n        users: getUsersReselect(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUserCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingProgress: getFollowingProgress(state),\n        portionSize: getPortionSize(state),\n        // isAuth: state.auth.isAuth\n    };\n};\n\n// let mapDispatchToProps = (dispatch: Dispatch) => {\n//     return {\n//         followCB: (userID: number) => {\n//             dispatch(FollowAC(userID))\n//         },\n//         unFollowCB: (userID: number) => {\n//             dispatch(UnFollowAC(userID))\n//         },\n//         setUsersCB: (users: Array<UsersType>) => {\n//             dispatch(SetUsersAC(users))\n//         },\n//         setCurrentPageCB: (currentPage: number) => {\n//             dispatch(SetCurrentPageAC(currentPage))\n//         },\n//         setTotalUserCount: (totalUserCount: number) => {\n//             dispatch(SetUsersTotalCountAC(totalUserCount))\n//         },\n//         toggleFetchingCB: (isFetching: boolean) => {\n//             dispatch(ToggleFetchingAC(isFetching))\n//         }\n//     }\n// }\n\n// const DoubleConnectComponent = withAuthRedirect(UsersContainer)\n//\n// export default connect(mapStateToProps, {\n//     setUsersCB: SetUsersAC,\n//     setCurrentPageCB: SetCurrentPageAC,\n//     setTotalUserCount: SetUsersTotalCountAC,\n//     toggleFetchingCB: ToggleFetchingAC,\n//     toggleFollowingCB: ToggleFollowingProgressAC,\n//     getUsers:  getUsersThunkCreator,\n//     follow: followThunkCreator,\n//     unFollow: unFollowThunkCreator\n// })(DoubleConnectComponent)\n\nexport default compose<React.ComponentType>(\n    connect(mapStateToProps, {\n        setUsersCB: SetUsersAC,\n        setCurrentPageCB: SetCurrentPageAC,\n        setTotalUserCount: SetUsersTotalCountAC,\n        toggleFetchingCB: ToggleFetchingAC,\n        toggleFollowingCB: ToggleFollowingProgressAC,\n        getUsers: getUsersThunkCreator,\n        follow: followThunkCreator,\n        unFollow: unFollowThunkCreator,\n    }),\n    // withAuthRedirect\n)(UsersContainer);\n"],"names":["Paginator","props","totalUsersCount","pageSize","currentPage","onPageCount","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionNumber","className","s","onClick","filter","p","map","page","User","user","followingProgress","follow","unFollow","Card","CardMedia","sx","height","image","photos","small","userPhoto","title","name","CardContent","Typography","gutterBottom","variant","component","color","status","CardActions","followed","Button","size","disabled","some","id","Users","users","toggleFollowingCB","UsersContainer","getUsers","this","isFetching","Preloader","React","compose","connect","state","getUsersReselect","getPageSize","getTotalUserCount","getCurrentPage","getIsFetching","getFollowingProgress","getPortionSize","setUsersCB","SetUsersAC","setCurrentPageCB","SetCurrentPageAC","setTotalUserCount","SetUsersTotalCountAC","toggleFetchingCB","ToggleFetchingAC","ToggleFollowingProgressAC","getUsersThunkCreator","followThunkCreator","unFollowThunkCreator"],"sourceRoot":""}